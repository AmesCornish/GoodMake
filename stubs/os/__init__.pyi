from .path import Path, FullPath
from typing import AnyStr, MutableMapping, Generic

def getcwd() -> FullPath: ...
def getpid() -> int: ...
def getppid() -> int: ...
def makedirs(fullPath: FullPath, exist_ok: bool = False) -> None: ...
def remove(fullPath: FullPath) -> None: ...
def utime(fullPath: FullPath) -> None: ...

class _Environ(MutableMapping[AnyStr, AnyStr], Generic[AnyStr]):
    def copy(self) -> Dict[AnyStr, AnyStr]: ...
    def __delitem__(self, key: AnyStr) -> None: ...
    def __getitem__(self, key: AnyStr) -> AnyStr: ...
    def __setitem__(self, key: AnyStr, value: AnyStr) -> None: ...
    def __iter__(self) -> Iterator[AnyStr]: ...
    def __len__(self) -> int: ...

environ: _Environ[str]
